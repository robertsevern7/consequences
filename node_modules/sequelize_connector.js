var Sequelize = require("sequelize");

var sequelize = new Sequelize('Consequences', 'root', 'password',{});

var User = sequelize.define('User', {
    id: {primaryKey: true, type: Sequelize.INTEGER, autoIncrement: true},
    userId: {type: Sequelize.INTEGER},
    carrier: {type: Sequelize.STRING}
});

var Story = sequelize.define('Story', {
    id: {type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true},
    title: {type: Sequelize.STRING, allowNull: false},
    characters: {type: Sequelize.STRING},
    max_sections: {type: Sequelize.INTEGER, allowNull: false, defaultValue: 5},
    num_likes: {type: Sequelize.INTEGER, allowNull: false, defaultValue: 0}
});

Story.belongsTo(User);

sequelize.sync({force: true});

module.exports.createUser = function(userId, carrier, successHandler, failureHandler) {
    User.find({
        where: {userId: userId, carrier: carrier}
    }).success(function(user) {
        if (user) {
            console.log('User ' + userId + ' already exists')
            console.dir(user)
            successHandler && successHandler(user);
        } else {
            console.log('user  ' + userId + ' does not exist, creating');
            User.build({ 
                userId: userId, 
                carrier: carrier
            }).save().success(function(user) {
                console.log('created User ' + userId);
                successHandler && successHandler(user);
            }).error(function(err) {
                console.log('failed to create user ' + userId);
                console.dir(err);
                failureHandler && failureHandler();
            });
        }
    }).error(function(e) {
        console.log('Failed to find the user ' + userId)
        console.dir(e);
        failureHandler && failureHandler();
    })
}

module.exports.createStory = function(story, user, successHandler, failureHandler) {
    Story.build(story).save().success(function(savedStory) {
    //console.dir(user)
        savedStory.setUser(user).success(function() {
        console.dir(savedStory)
            successHandler && successHandler(user.userId, savedStory.id);
        }).error(function() {
            console.log('failed to add user to story ' + story);
            console.dir(err);
            failureHandler && failureHandler();
        })
        
    }).error(function(err) {
        console.log('failed to create story ' + story);
        console.dir(err);
        failureHandler && failureHandler();
    });
}